openapi: 3.0.0
info:
  contact: { }
  description: DCM Service Provider API
  title: Service Provider API
  version: v1alpha1
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: /

paths:
  /health:
    get:
      summary: Health check
      operationId: ListHealth
      description: Health check for DCM Service Provider API
      responses:
        '200':
          description: OK

  /provider/registration:
    post:
      summary: Register VM Service Providers
      operationId: CreateVMProvider
      description: Register Virtual Machine Service Providers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMProvider'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMProvider'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /providers:
    get:
      summary: Get all providers
      operationId: ListVMProviders
      description: List all DCM VM Service Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMProviderList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /providers/{provider-id}:
    get:
      summary: Get a provider
      operationId: GetVMProvider
      description: Get a VM Service Provider
      parameters:
        - name: provider-id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMProvider'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /provider/{provider-id}/application:
    post:
      summary: Create a VM
      operationId: CreateVM
      description: Create an application based on service provider
      parameters:
        - name: provider-id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMRequest'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VM'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete an application
      operationId: DeleteVM
      description: Delete a DCM application based on unique ID
      parameters:
        - name: appID
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: provider-id
          in: path
          required: true
          schema:
            type: string
            format: uuid


      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VM'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    VMProvider:
      type: object
      x-aep-resource: true
      required:
        - name
        - id
        - type
        - description
        - endpoint
      properties:
        id:
          type: string
          description: Unique identifier for the Service Provider
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the Service Provider
          example: "kubevirt"
        endpoint:
          type: string
          description: API of the Service Provider
          example: "http://localhost:8080"
        type:
          type: string
          description: Type of the Service Provider
          example: "vm"
        description:
          type: string
          description: Summary of Service Provider
          example: "KubeVirt VM Service Provider"

    VMProviderList:
      type: object
      properties:
        providers:
          type: array
          items:
            $ref: '#/components/schemas/VMProvider'
        next_page_token:
          type: string
          description: Token for retrieving the next page of results
          example: "eyJpZCI6IjEyM2U0NTY3LWU4OWItMTJkMy1hNDU2LTQyNjYxNDE3NDAwMCJ9"

    VMRequest:
      type: object
      x-aep-resource: true
      properties:
        id:
          type: string
          description: ID of the VM
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the VM
          example: "webserver"
        namespace:
          type: string
          description: Namespace of the VM
        osImage:
          type: string
          description: Base image of the OS
          example: "quay.io/containerdisks/fedora:latest"
        cpu:
          type: integer
          description: CPU for the VM
          example: 1
        ram:
          type: integer
          description: Ram for the CPU
          example: 1

    VM:
      type: object
      x-aep-resource: true
      properties:
        id:
          type: string
          description: ID of the VM
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the VM
          example: "webserver"
        namespace:
          type: string
          description: Namespace of the VM
    Error:
      required:
        - error
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: integer
          description: Error code
          example: 400

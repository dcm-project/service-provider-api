// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code *int `json:"code,omitempty"`

	// Error Error message
	Error string `json:"error"`
}

// VM defines model for VM.
type VM struct {
	// Id ID of the VM
	Id *string `json:"id,omitempty"`

	// Name Name of the VM
	Name *string `json:"name,omitempty"`

	// Namespace Namespace of the VM
	Namespace *string `json:"namespace,omitempty"`
}

// VMProvider defines model for VMProvider.
type VMProvider struct {
	// Description Summary of Service Provider
	Description string `json:"description"`

	// Endpoint API of the Service Provider
	Endpoint string `json:"endpoint"`

	// Id Unique identifier for the Service Provider
	Id string `json:"id"`

	// Name Name of the Service Provider
	Name string `json:"name"`

	// Type Type of the Service Provider
	Type string `json:"type"`
}

// VMProviderList defines model for VMProviderList.
type VMProviderList struct {
	// NextPageToken Token for retrieving the next page of results
	NextPageToken *string       `json:"next_page_token,omitempty"`
	Providers     *[]VMProvider `json:"providers,omitempty"`
}

// VMRequest defines model for VMRequest.
type VMRequest struct {
	// Cpu CPU for the VM
	Cpu *int `json:"cpu,omitempty"`

	// Id ID of the VM
	Id *string `json:"id,omitempty"`

	// Name Name of the VM
	Name *string `json:"name,omitempty"`

	// Namespace Namespace of the VM
	Namespace *string `json:"namespace,omitempty"`

	// OsImage Base image of the OS
	OsImage *string `json:"osImage,omitempty"`

	// Ram Ram for the CPU
	Ram *int `json:"ram,omitempty"`
}

// DeleteVMParams defines parameters for DeleteVM.
type DeleteVMParams struct {
	AppID *openapi_types.UUID `form:"appID,omitempty" json:"appID,omitempty"`
}

// CreateVMProviderJSONRequestBody defines body for CreateVMProvider for application/json ContentType.
type CreateVMProviderJSONRequestBody = VMProvider

// CreateVMJSONRequestBody defines body for CreateVM for application/json ContentType.
type CreateVMJSONRequestBody = VMRequest
